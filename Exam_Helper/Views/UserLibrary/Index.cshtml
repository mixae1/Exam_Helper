@model Exam_Helper.ViewsModel.ClassForUserLibrary
@using Microsoft.AspNetCore.Identity
@using System.Linq;

@{
    ViewData["Title"] = "Library Page";
}
@inject UserManager<User> UserManager;

<main class="container" style="padding-top: 3vh;">
    <div id="Alerts" style="position: absolute; right: 0; top: 0;">
    </div>
    <form id="form">
        <div class="container">

            <div id="modDialog" class="modal fade">
                <div id="dialogContent" class="modal-dialog"></div>
            </div>

            <div class="justify-content text-center h1">
                <span>Моя Библиотека</span>
            </div>

            <hr color="brown" />
            <div class="container ul-buttons">
                <div class="container bd-highlight pt-3" style="padding-bottom:1rem;">
                    <div class="row row-cols-auto justify-content-center">
                        <button class="btn btn-outline-info m-2" type="button" id="button_Que" data-toggle="collapse" data-target="#collapseAllQuestion" aria-expanded="true" aria-controls="collapseAllQuestion">
                            Вопросы
                        </button>
                        <button class="btn btn-outline-info m-2" type="button" id="button_Pack" data-toggle="collapse" data-target="#collapseAllPacks" aria-expanded="true" aria-controls="collapseAllPacks">
                            Паки
                        </button>
                        <a class="btn btn-outline-info m-2" type="button" asp-action="QCreate">
                            Добавить вопрос
                        </a>
                        <a class="btn btn-outline-info m-2" type="button" asp-action="PCreate">
                            Добавить пак
                        </a>
                    </div>
                </div>
                <div class="container">
                    <div class="row row-cols-auto justify-content-center">
                        <button class="btn btn-outline-info m-2" type="button" onclick="EngageSelected('delete')" id="DeleteSelectedButton">
                            Удалить выбранное
                        </button>
                        <button class="btn btn-outline-info m-2" type="button" onclick="EngageSelected('publish')" id="PublishSelectedButton">
                            Опубликовать выбранное
                        </button>
                        <button class="btn btn-outline-info m-2" type="button" onclick="EngageSelected('hide')" id="HideSelectedButton">
                            Скрыть выбранное
                        </button>
                        <button class="btn btn-outline-info m-2" type="button" onclick="CheckAll(true)">
                            Выделить всё
                        </button>
                        <button class="btn btn-outline-info m-2" type="button" onclick="CheckAll(false)">
                            Убрать выделение
                        </button>
                    </div>
                </div>
            </div>
            <div class="form-group pb-3 bd-highlight ml-auto p-2">
                <input type="text" name="SearchString" class="form-control" placeholder="Поиск.." id="Search">
            </div>
            <div class="panel-group" id="accordionCommon">
                <div class="collapse show" id="collapseAllQuestion">
                    @foreach (var item in Model.questions.Where(x => x.IsSearched && x.IsUser))
                    {
                        <div class="accordion" id="accordionExample" data-id="@(item.question.Id)" data-type="question">
                            <div class="container card mt-2 shadow mb-4 bg-white rounded">
                                <div class="container card-header bg-white" id="headingOne">
                                    <div class="row row-cols-auto justify-content-between">
                                        <div class="d-flex align-items-center">
                                            <div class="card-check">
                                                <input type="checkbox" style="margin:auto;" id="qSelect"/>
                                            </div>

                                         
                                            <button class="btn text-center titleText d-flex align-items-center" type="button" data-toggle="collapse" data-target="#q_collapse_@item.question.Id.ToString()" aria-expanded="false" aria-controls="q_collapse_@item.question.Id.ToString()">
                                                <span class="h4" id="qTitle">@Html.DisplayFor(modelItem=>item.question.Title) </span> 
                                                <span class="d-flex ml-2 stat-per">
                                                    <p style="color: green;" class="m-0">@item.stats.MissWords %</p>
                                                    <p style="color: red;" class="m-0 ml-2">@item.stats.WrongText %</p>
                                                </span>
                                            </button>
                                            

                                        </div>
                                        <div class="btn-group justify-content-center align-items-center actionButton pr-5">
                                            <button type="button" class="btn collapse btn-info dropdown-toggle action-button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="q_collapse_@item.question.Id.ToString()" data-parent="#accordionExample">
                                                Действия
                                            </button>
                                            <div class="dropdown-menu ddm-btn">
                                                <a class="dropdown-item" asp-action="QRedirectToTest" asp-route-id="@item.question.Id">Тестирование</a>
                                                <a class="dropdown-item" asp-action="QEdit" asp-route-id="@item.question.Id">Редактирование</a>
                                                <a class="dropdown-item compItem" asp-action="QDetails" asp-route-id="@item.question.Id">Подробности</a>
                                                <a class="dropdown-item compItem" asp-action="QDelete" asp-route-id="@item.question.Id">Удаление</a>
                                                @if (UserManager.GetUserName(User) == item.question.Author)
                                                {
                                                    <a class="dropdown-item" id="@("q" + item.question.Id.ToString())" onclick="ChangeQuestionPrivate(this.id)" style="cursor:pointer;">@(item.question.IsPrivate ? "Опубликовать" : "Скрыть")</a>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div id="q_collapse_@item.question.Id.ToString()" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                                    <div class="card-body d-flex flex-column align-content-center p-2 mt-2 mb-2">
                                        <div class="row row-cols-auto">
                                            @foreach (var t in item.question.TagIds.Split(';'))
                                                {
                                                    if (!string.IsNullOrEmpty(t))
                                                    {
                                                        <div class="alert alert-info text-center tags mt-1">
                                                            <span class="cardTags" id="qTags">@Html.DisplayFor(modelItem => modelItem.tags.Find(x => x.Id == int.Parse(t)).Title) </span>
                                                        </div>
                                                    }
                                                }
                                        </div>
                                        <span class="h5 pt-2" style="white-space: pre-wrap; margin-bottom: 0rem!important;" id="qDefinition">@Html.DisplayFor(model=>item.question.Definition)</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>

                <div class="collapse" id="collapseAllPacks">
                    @foreach (var item in Model.packs)
                    {
                        <div class="accordion" id="accordionExample" data-id="@(item.Id)" data-type="pack">
                            <div class="container card mt-2 shadow mb-4 bg-white rounded">
                                <div class="container card-header bg-white" id="headingOne">
                                    <div class="row row-cols-auto justify-content-between">
                                        <div class="d-flex justify-content-start">
                                            <div class="d-flex align-items-center">
                                                <input type="checkbox" style="margin:auto;" id="pSelect"/>
                                            </div>
                                            <div class="row row-cols-auto align-items-center ml-3">
                                                <button class="btn" type="button" data-toggle="collapse" data-target="#p_collapse_@item.Id.ToString()" aria-expanded="false" aria-controls="p_collapse_@item.Id.ToString()">
                                                    <span class="h4 titleText" id="pName"> @Html.DisplayFor(modelItem => item.Name) </span>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="btn-group justify-content-center align-items-center actionButton pr-5">
                                            <button type="button" class="btn collapse btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" id="p_collapse_@item.Id.ToString()" data-parent="#accordionExample">
                                                Действия
                                            </button>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item" asp-action="PRedirectToTest" asp-route-id="@item.Id">Тестирование</a>
                                                <a class="dropdown-item" asp-action="PEdit" asp-route-id="@item.Id">Редактирование</a>
                                                <a class="dropdown-item compItem" asp-action="PDetails" asp-route-id="@item.Id">Подробности</a>
                                                <a class="dropdown-item compItem" asp-action="PDelete" asp-route-id="@item.Id">Удаление</a>
                                                @if (UserManager.GetUserName(User) == item.Author)
                                                {
                                                    <a class="dropdown-item" id="@("p" + item.Id.ToString())" onclick="ChangePackPrivate(this.id)" style="cursor:pointer;">@(item.IsPrivate ? "Опубликовать" : "Скрыть")</a>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div id="p_collapse_@item.Id.ToString()" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                                    <div class="card-body  d-flex flex-column">
                                        <div class="row row-cols-auto">
                                            @foreach (var t in item.TagsId.Split(';'))
                                                {
                                                    if (!string.IsNullOrEmpty(t))
                                                    {
                                                        <div class="alert alert-info  text-center">
                                                            <span id="pTags">@Html.DisplayFor(modelItem => modelItem.tags.Find(x => x.Id == int.Parse(t)).Title) </span>
                                                        </div>
                                                    }
                                                }
                                        </div>
                                        @foreach (var quesId in item.QuestionSet.Split(new char[] {';'}, StringSplitOptions.RemoveEmptyEntries))
                                        {
                                            <div class="d-flex flex-column justify-content-between pt-2 pb-3">
                                                <a class="compItem" asp-action="QDetails" asp-route-id="@quesId" id="pqList"> @Model.questions.FirstOrDefault(x => x.question.Id.ToString() == quesId).question.Title</a>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </form>
</main>

<script>
    var Page = { None: 0, QuestionPage: 1, PackPage: 2 };

    var SearchString = $("#Search");
    var SelectedPage = Page.QuestionPage;

    var lastChecked = null;

    var alerts = document.getElementsByClassName("closebtn");

    function CreateAlert(str, type) {
        $('#Alerts').empty();
        $('#Alerts').append('<div class="alert ' + type + '"><span class="closebtn">×</span><strong>' + str + '</strong></div>');
        alerts = document.getElementsByClassName("closebtn");
        console.log(alerts);
        alerts[alerts.length - 1].onclick = function () {
            var div = this.parentElement;
            div.style.opacity = "0";
            setTimeout(function () { div.style.display = "none"; }, 600);
        }
        setTimeout(function () { $('#Alerts').empty(); }, 5000);
    };

    function CheckAll(flag) {
        switch (SelectedPage) {
            case Page.QuestionPage:
                $("input#qSelect").prop("checked", flag);
                break;
            case Page.PackPage:
                $("input#pSelect").prop("checked", flag);
                break;
        }
    };

    $(document).ready(function () {

        $('input#qSelect').on('click', function (e) {
            var $checkboxes = $('input#qSelect');
            if (!lastChecked) {
                lastChecked = this;
            }

            if (e.shiftKey) {
                var start = $checkboxes.index(this);
                var end = $checkboxes.index(lastChecked);
                $checkboxes.slice(Math.min(start, end), Math.max(start, end) + 1).prop("checked", lastChecked.checked);
            }
            lastChecked = this;
        });

        $('input#pSelect').on('click', function (e) {
            var $checkboxes = $('input#pSelect');
            if (!lastChecked) {
                lastChecked = this;
            }

            if (e.shiftKey) {
                var start = $checkboxes.index(this);
                var end = $checkboxes.index(lastChecked);
                $checkboxes.slice(Math.min(start, end), Math.max(start, end) + 1).prop("checked", lastChecked.checked);
            }
            lastChecked = this;
        });

        SearchString.on("keyup", function () {
            var value = SearchString.val().toLowerCase();
            $("div[class='accordion'][id='accordionExample'][data-type='question']").filter(function () {
                var aCard = $(this);
                aCard.toggle(
                    aCard.find("span#qTitle").text().toLowerCase().indexOf(value) > -1 ||
                    aCard.find("span#qTags").text().toLowerCase().indexOf(value) > -1 ||
                    aCard.find("span#qDefinition").text().toLowerCase().indexOf(value) > -1)
            });
        });

        SearchString.on("keyup", function () {
            var value = SearchString.val().toLowerCase();
            $("div[class='accordion'][id='accordionExample'][data-type='pack']").filter(function () {
                var aCard = $(this);
                aCard.toggle(
                    aCard.find("span#pName").text().toLowerCase().indexOf(value) > -1 ||
                    aCard.find("span#pTags").text().toLowerCase().indexOf(value) > -1 ||
                    aCard.find("span#pqList").text().toLowerCase().indexOf(value) > -1)
            });
        });

        if (screen.width < 768) {
            $(document).ready(function () {
                $('.card-header').addClass('flex-column')
                $('.card-header').addClass('mt-2')
            });
        }

        $("#button_Que").click(function () {
            $('#collapseAllPacks').removeClass('show');
            if (SelectedPage != Page.QuestionPage) SelectedPage = Page.QuestionPage;
            else SelectedPage = Page.None;
            lastChecked = null;
        });

        $("#button_Pack").click(function () {
            $('#collapseAllQuestion').removeClass('show');
            if (SelectedPage != Page.PackPage) SelectedPage = Page.PackPage;
            else SelectedPage = Page.None;
            lastChecked = null;
        });

    });

    $(function () {
        $.ajaxSetup({ cache: false });
        $(".compItem").click(function (e) {

            e.preventDefault();

            $.get(this.href, function (data) {
                $('#dialogContent').html(data);
                $('#modDialog').modal('show');
            });
        });
    });

    function EngageSelected(arg) {

        var buf = [];

        if (SelectedPage == Page.None) {
            CreateAlert("Ни одна из вкладок не открыта.", "warning");
        }
        else {

            if (SelectedPage == Page.QuestionPage) {
                $("input[type='checkbox'][id='qSelect']").each(function () {
                    var chBox = $(this);
                    if (chBox.is(':checked')) buf.push(chBox.closest("div.accordion#accordionExample").data('id'));
                });
            }

            if (SelectedPage == Page.PackPage) {
                $("input[type='checkbox'][id='pSelect']").each(function () {
                    var chBox = $(this);
                    if (chBox.is(':checked')) buf.push(chBox.closest("div.accordion#accordionExample").data('id'));
                });
            }

            if (buf.length == 0) {
                if (SelectedPage == Page.QuestionPage) CreateAlert("Ни один вопрос не выбран.", "warning");
                if (SelectedPage == Page.PackPage) CreateAlert("Ни один пак не выбран.", "warning");
            }
            else {

                if (arg == "delete") {
                    __url = (SelectedPage == Page.QuestionPage ? '@Url.Action("QDeleteSelected", "UserLibrary")' : '@Url.Action("PDeleteSelected", "UserLibrary")');
                    __data = { ids: buf };
                }
                if (arg == "publish" || arg == "hide") {
                    __url = (SelectedPage == Page.QuestionPage ? '@Url.Action("ChangeQuestionPrivateSelected", "UserLibrary")' : '@Url.Action("ChangePackPrivateSelected", "UserLibrary")');
                    __data = { ids: buf, publish: (arg == "publish" ? true : false) };
                }

                $.ajax(
                {
                    type: "Post",
                    url: __url,
                    data: __data,
                    success: function (data) {
                        $('#dialogContent').html(data);
                        $('#modDialog').modal('show');
                        },
                    error: function (data) {
                        CreateAlert("Что-то пошло не так", '');
                        }
                })
            }
        }
    }

    function ChangeQuestionPrivate(id) {
        var a = document.getElementById(id);

        var lastText;
        if (a.innerHTML === "Опубликовать" || a.innerHTML === "Скрыто") lastText = "Опубликован";
        if (a.innerHTML === "Скрыть" || a.innerHTML === "Опубликован") lastText = "Скрыто";

        a.innerHTML = "Пожалуйста, подождите...";

        $.ajax(
            {
                type: "Post",
                data: { ques_id: id },
                url: '@Url.Action("ChangeQuestionPrivate", "UserLibrary")',
                success: function (msg) {
                    a.innerHTML = lastText;
                      },
                error: function (msg) {
                    CreateAlert('Something went wrong', '');
                      }
            })

        return false;
    };

    function ChangePackPrivate(id) {
        var a = document.getElementById(id);

        var lastText;
        if (a.innerHTML === "Опубликовать" || a.innerHTML === "Скрыто") lastText = "Опубликован";
        if (a.innerHTML === "Скрыть" || a.innerHTML === "Опубликован") lastText = "Скрыто";

        a.innerHTML = "Пожалуйста, подождите...";

        $.ajax(
            {
                type: "Post",
                data: { pack_id: id },
                url: '@Url.Action("ChangePackPrivate", "UserLibrary")',
                success: function (msg) {
                    a.innerHTML = lastText;
                      },
                error: function (msg) {
                    a.innerHTML = "Ошибка.";
                          CreateAlert('Something went wrong', '');
                      }
            })

        return false;
    };

</script>

<style>
    .ul-buttons{
        max-height: 200px;
        overflow-y: auto;
    }
    .alert {
        padding: 20px;
        background-color: #f44336;
        color: white;
        opacity: 1;
        transition: opacity 0.6s;
        margin-bottom: 15px;
    }
    .card-check{
        width: 30px;
    }

    .alert.success {
        background-color: #4CAF50;
    }

    .alert.info {
        background-color: #2196F3;
    }

    .alert.warning {
        background-color: #ff9800;
    }

    .closebtn {
        margin-left: 15px;
        color: white;
        font-weight: bold;
        float: right;
        font-size: 22px;
        line-height: 20px;
        cursor: pointer;
        transition: 0.3s;
    }

    .closebtn:hover {
        color: black;
    }
    #qSelect {
        height:15px;
        width:15px;
    }
    .card-body {
        min-height: 90px;
    }
    .ddm-btn {
        max-height: 110px;
        overflow-y: auto;
    }
</style>
