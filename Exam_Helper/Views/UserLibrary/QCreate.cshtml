@model Exam_Helper.ViewsModel.ClassForQuestionCreatingModel;

@{
    ViewData["Title"] = "Create";
}
<head>
    <script src="~/js/tag_adding.js"></script>
</head>

<main class="container d-flex flex-column align-items-center q-main">
    <h1>Создание</h1>
    <h4>Вопроса</h4>
    <hr color="brown" />
    <div class="instruction mt-3">
        <span>Поля, помеченные (<span class="colortext" style="color:red">*</span>), обязательны для заполнения:</span>
    </div>

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <form asp-action="QCreate">

        <div class="form-group">
            <b>@Html.DisplayNameFor(model => model.Title)<span class="colortext" style="color:red">*</span>:</b>
            <br />
            <input asp-for="@Model.Title" type="text" class="form-control input-name" style="width: 300px;">
            <span asp-validation-for="@Model.Title" class="text-danger"></span>
        </div>

        <div class="form-group">
            <b>@Html.DisplayNameFor(model => model.Definition)<span class="colortext" style="color:red">*</span>:</b>
            <br />
            <textarea asp-for="@Model.Definition" id="textarea" rows="3" class="form-control"></textarea>
            <br />
            <span asp-validation-for="@Model.Definition" class="text-danger"></span>
        </div>

        <div class="form-group">
            <b>@Html.DisplayNameFor(model => model.Proof):</b>
            <br />
            <textarea asp-for="@Model.Proof" id="textarea" rows="5" class="form-control"></textarea>
        </div>

        <div class="form-group">
            <b>@Html.DisplayNameFor(model => model.tags):</b>
            <br />
            <div class="d-flex flex-column">
                <div>
                    <input class="form-control" id="tInput" type="text" placeholder="Выберите или создайте" autocomplete="off">
                    <div class="list-group" style="max-height: 288px; overflow-y: scroll; display: none;" id="tList"></div>
                </div>
                <div class="d-flex">
                    <div id="stList" style="width: 300px;" class="d-flex flex-wrap ml-3 mt-2">
                    </div>
                    <div class="mt-2">
                        <a style="width: 30px; height: 30px; align-items: center; margin: 5px; padding: 0; display: none;" class="btn bg-light deleteButton">&times;</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <button class="btn btn-success">Создать</button>
            <a asp-action="Index">
                <button type="button" class="btn btn-secondary">Обратно к списку</button>
            </a>
        </div>

    </form>

</main>

<div class="side-bar">
    <div class="sidebar-content">
        <div class="tab">
            <button class="tablinks" onclick="openTab(event, 'Latin')">Latin</button>
            <button class="tablinks" onclick="openTab(event, 'Math')">Math</button>
        </div>
        <div id="Latin" class="tabcontent">
            <caption>Латынь</caption>
            <table border="1">

                <tr><td>Α</td><td>α</td><td>Β</td><td>β</td><td>Γ</td><td>γ</td></tr>
                <tr><td>Δ</td><td>δ</td><td>Ε</td><td>ε</td><td>Ζ</td><td>ζ</td></tr>
                <tr><td>Η</td><td>η</td><td>Θ</td><td>θ</td><td>Ι</td><td>ι</td></tr>
                <tr><td>Κ</td><td>κ</td><td>Λ</td><td>λ</td><td>Μ</td><td>μ</td></tr>
                <tr><td>Ν</td><td>ν</td><td>Ξ</td><td>ξ</td><td>Ο</td><td>ο</td></tr>
                <tr><td>Π</td><td>π</td><td>Ρ</td><td>ρ</td><td>Σ</td><td>σ</td></tr>
                <tr><td>Τ</td><td>τ</td><td>Υ</td><td>υ</td><td>Φ</td><td>φ</td></tr>
                <tr><td>Χ</td><td>χ</td><td>Ψ</td><td>ψ</td><td>Ω</td><td>ω</td></tr>
            </table>
        </div>

        <div id="Math" class="tabcontent">
            <caption>Мат. знаки</caption>
            <table border="1">

                <tr><td>∧</td><td>∨</td><td>¬</td><td>→</td><td>∀</td><td>∃</td></tr>
                <tr><td>≤</td><td>≥</td><td>∈</td><td>∉</td><td>∑</td><td>∏</td></tr>
                <tr><td>⊆</td><td>⊂</td><td>⊊</td><td>⊇</td><td>⊃</td><td>⊋</td></tr>
                <tr><td>∪</td><td>⋂</td></tr>
            </table>
        </div>
    </div>
    <a class="sidebar" onclick="toggleSymbols()"></a>
</div>

<script>

    function toggleSymbols() {
        $(".side-bar div.sidebar-content").toggle();
    }

    function openTab(evt, tabName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }

    $(document).ready(function () {
        SetInput("input#tInput");
        SetTagListForChoice("div#tList");
        SetTagListForSelected("div#stList");

        var tags = [];
        @foreach(var tagName in Model.tags.LoadedTags)
        {
            @:tags.push("@(new Microsoft.AspNetCore.Html.HtmlString(tagName))");
        }
        LoadTags(tags);
        Tune();

        $(".input-name").keypress(function(e){
             if(e.keyCode == 13) return false;
        });
        $(".deleteButton").click(function (){
            RemoveLastSelectedTag()
        })
    });


</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<style>

    .badge {
        display: flex;
        align-items: center;
        height: 30px;
        font-size: 15px;
        background-color: #778899;
        margin: 5px;
    }

    .side-bar {
        position: fixed;
        top: 50%;
        -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    }

        .side-bar a {
            display: grid;
            text-align: center;
            padding: 16px;
            transition: all 0.3s ease;
            color: white;
            font-size: 20px;
        }

            .side-bar a:hover {
                background-color: #000;
            }

    .sidebar {
        background: #3B5998;
        color: white;
    }

    .sidebar-content {
        display: none;
    }


    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: bisque;
    }

        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 3px 4px;
            transition: 0.3s;
            font-size: 17px;
        }

            .tab button:hover {
                background-color: #ddd;
            }

            .tab button.active {
                background-color: #ccc;
            }

    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
        background-color: aliceblue;
    }
</style>