@using Exam_Helper.ViewsModel
@model Exam_Helper.ViewsModel.TestChoiceViewModel;
@{
   
}

<main style="height: 75vh;" class="container d-flex align-items-center justify-content-center">
    <form asp-action="Index" method="post">
        <h2>
            Выберите метод тестирования:
        </h2>
        <div asp-validation-summary="All" class="text-danger"></div>
        @for (int i = 0; i < Model.TestMethodsNames.Length; i++)
        {
            <div class="panel-group" id="accordion">
                <div class="panel">
                    <div class="panel-heading">
                        <div class="d-flex justify-content-between pt-3 pb-2">
                            <div class="input-group">
                                <div class="input-group-prepend bg-white mr-3 test-card">
                                    <div class="input-group-text">
                                        <input asp-for="@Model.SelectedId" value="@Model.TestsMethodsIds[i]" type="radio" id="method" method-type="@Model.TestMethodsNames[i]" />
                                        <input asp-for="@Model.TestsMethodsIds[i]" type="hidden" />
                                        <input asp-for="@Model.ServiceInfo" type="hidden" id="ServiceInfo" />
                                        <span asp-validation-for="@Model.SelectedId" hidden></span>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <span asp-for="@Model.TestsMethodsIds[i]">
                                            @switch (Model.TestMethodsNames[i])
                                            {
                                                case "TestConstructor":@:Конструктор тестов
                                                    break;

                                                case "NameAndDesc": @:Cопоставить название и определение
                                                    break;

                                                default:
                                                    @Model.TestMethodsNames[i]
                                                    break;
                                            }
                                        </span>
                                    </div>
                                    <button class="btn" type="button" data-toggle="collapse" data-parent="#accordion" data-target="#collapse_@Model.TestMethodsNames[i]">
                                        <img class="setting-btn" src="./sett_icon.png" />
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="collapse_@Model.TestMethodsNames[i]" class="panel-collapse collapse in">
                        <div class="panel-body">
                            @switch (Model.TestMethodsNames[i])
                                            {
                                case "TestConstructor":
                                    <p>
                                        Общее количество тестов:
                                        <input type="range" min="1" max="5" value="3" id="mtTestConstructor_quantity" onchange="displayValue(this,'mtTestConstructor-input')">
                                        <span id="mtTestConstructor-input">3</span>
                                    </p>
                                    break;
                                default:
                                    <p>
                                        Для данного вида тестирования пользовательские настройки не предусмотрены. 
                                    </p>
                                    break;

                            }
                        </div>
                    </div>
                </div>

            </div>
        }
        <div class="form-group">
           <input type="submit" value="Сделать выбор" class="btn btn-primary" id="sumbit" onclick="MakeInstruction()" />
        </div>
        <a asp-controller=@ViewData["ReturnControllerName"] asp-action="Index">
            <input type="button" value="Вернуться в библиотеку" class="btn btn-primary" />
        </a>
    </form>


</main>

<script>
    const multitesting_pack = $("#collapse_TestConstructor > div");


    $(function () {

        localStorage.removeItem('userStats/MissingWords');
        localStorage.removeItem('userStats/Puzzle');
        localStorage.removeItem('userStats/Wrong');
        localStorage.setItem('testfinished', 'f');
    });

    function MakeInstruction() {
        var curr_method;
        $("input#method").each(function () {
            if ($(this).is(":checked")) {
                curr_method = $(this).attr("method-type");
            }
        });

        console.log(multitesting_pack.innerHTML);

        var instruction;
        var multitest_instruction;
        switch (curr_method) {
            case "TestConstructor":
                instruction =
                    multitesting_pack.find("input#mtTestConstructor_quantity").val().toString();
                break;
        }

      
        $("input#ServiceInfo").val(instruction);
        $("input#InfoTest").val(multitest_instruction);
    };



    function displayValue(obj, id) {
      var inputSpan = document.getElementById(id);
      inputSpan.innerHTML = obj.value;
    }

</script>
<style>
    .input-group-text{
            border: 0px solid black;
            background-color: white;
        }
    .test-card{
        border: 2px solid black;
        border-radius: 5px;
    }
    .setting-btn {
        width: 50%;
    }
    .panel-body {
        padding: 5px;
        max-height:175px;
        overflow-y: scroll
    }
    .test-card {
        height:70px;
    }
</style>